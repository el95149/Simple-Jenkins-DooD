pipeline {
    agent {
        docker {
            image 'maven:3-alpine'
            args '-v $HOME/.m2:/root/.m2'
        }
    }
    environment {
        workDir = 'example/maven'
    }

    stages {
        stage('Build') {
            steps {
                dir("${workDir}") {
                    sh 'mvn -B clean package'
                }
            }
        }

        stage('静的コード解析') {
            steps {
                parallel(
                    '静的コード解析' : {
                        dir("${workDir}") {
                            step([
                                $class: 'CheckStylePublisher',
                                pattern: "checkstyle/*.xml"
                            ])
                            step([
                                $class: 'FindBugsPublisher',
                                pattern: "findbugs/*.xml"
                            ])
                            step([
                                $class: 'PmdPublisher',
                                pattern: "pmd/*.xml"
                            ])
                            step([
                                $class: 'DryPublisher',
                                pattern: "cpd/*.xml"
                            ])
                            step([
                                $class: 'WarningsPublisher',
                                consoleParsers: [
                                    [parserName: 'Java Compiler (javac)'],
                                    [parserName: 'Maven'],
                                ]
                            ])
                        }
                    },
                    'ステップカウント': {
                        dir("${workDir}") {
                            stepcounter settings: [
                                [key:'Java', filePattern: "src/main/java/**/*.java"]
                            ]
                        }
                    },
                    'タスクスキャン': {
                        dir("${workDir}") {
                            step([
                                $class: 'TasksPublisher',
                                pattern: './**',
                                ignoreCase: true,
                                high: 'System.out.System.err',
                                normal: 'TODO,FIXME,XXX',
                            ])
                        }
                    }
                )
            }
        }


        stage('テスト') {
            steps {
                dir("${workDir}") {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archive 'target/*.jar'
                    step([
                        $class: 'JacocoPublisher',
                        execPattern: "*.exec",
                        exclusionPattern: '**/*Test.class'
                    ])
                }
            }
        }
    }
}